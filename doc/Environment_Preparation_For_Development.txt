Подготовка окружения (когда новая СУБД будет в проде, достаточно будет взять текущий дамп базы, без патчей)

1.	Сетапим базу данных Mysql версии 5.6+. Создаем базу данных

CREATE DATABASE `homeless` CHARACTER SET utf8 COLLATE utf8_general_ci;

и юзера, которому даем права на все что можно в этой базе

CREATE user `homeless`@`localhost` identified by ‘Password123’

Под Windows:
CREATE user `homeless`@`localhost` identified by "Password123";

GRANT all privileges on homeless.* to `homeless`@` localhost `;
flush privileges;

2.	Заливаем в базу дамп с начальными данными. Дамп подготавливается вручную после изменения справочников (в случае острой необходимости) и является совместимым лишь со старой версией СУБД (толстый клиент)

mysql –u юзер –p база_данных < путь_к_дампу (homeless.base.sql)
(не работает на Windows)

или запустить MySQL X.X Command Line Client, выполнить, например:
mysql> use homeless;
mysql> source H:\sbdata\homeless\db\homeless.base.sql

Важно убедиться что имена всех таблиц начинаются с заглавной буквы. Если это не так, в файле C:\Program Files\MySQL\MySQL Server 5.6\my.cnf (или C:\ProgramData\MySQL\MySQL Server 5.7\my.ini) в секции [mysqld] указать опцию 
lower_case_table_names=2
и передернуть базу. Если таблички уже импортированы, грохнуть их, например:
drop database homeless;
или пересоздать базу, и залить их заново.

3.	Далее необходимо накатить патч (patch.sql), если в нем лишь одна конструкция типа select 1, то можно этот шаг пропустить:

mysql –u юзер –p база_данных < путь_к_патчу (patch.sql)
(не работает на Windows)

или запустить MySQL X.X Command Line Client, выполнить, например:
mysql> use homeless;
mysql> source H:\sbdata\homeless\db\patch.sql


4.	С базой покончено, ставим application server на примере Apache Tomcat и конфигурим там jndi ресурс. Отладка идет под версией 7.0.59, именно она и рекомендована к использованию в дальнейшем. Качаем ее с оффсайта и распаковываем ее недалеко от корня рабочего диска (под Linux – без разницы). В conf/server.xml в теге  <GlobalNamingResources> конфигурим ресурс

<Resource
     name="jdbc/DevelopmentDB"
     auth="Container"
     type="javax.sql.DataSource"
     factory="org.apache.tomcat.jdbc.pool.DataSourceFactory"
     initialSize="5"
     maxActive="55"
     maxIdle="21"
     minIdle="13"
     timeBetweenEvictionRunsMillis="34000"
     minEvictableIdleTimeMillis="55000"
     validationQuery="SELECT 1"
     validationInterval="34"
     testOnBorrow="true"
     removeAbandoned="true"
     removeAbandonedTimeout="233"
     username="логин"
     password="пароль"
     driverClassName="com.mysql.jdbc.Driver"
     url="jdbc:mysql://localhost:3306/homeless?useUnicode=true&amp;characterEncoding=UTF-8"
/>

А в conf/context.xml надо указать линк на этот ресурс 

<ResourceLink name="DevelopmentDB" global="jdbc/DevelopmentDB" type="javax.sql.DataSource"/>

И в директорию lib томката нужно положить драйвер для MySQL (mysql-connector-java-5.1.21.jar), взять его можно из homeless\scripts\migrate\mysql-connector-java-5.1.21.jar или из интернета

Подробности можно почитать на http://www.codingpedia.org/ama/tomcat-jdbc-connection-pool-configuration-for-production-and-development/

5.	Итак, томкат готов, база готова. Можно просто запустить аппликацию, можно сделать этот через IDE.

6.	Для запуска отдельно стоящего инстанса нужно просто собрать WAR из исходников командой mvn clean package и полученный WAR закинуть в директорию с webapps. Томкат сам задеплоит приложение при старте (скрипты в bin для запуска и остановки приложения). В запущенном приложении будет работать основная функциональность, без отчетов. С первого раза сборка WAR не пройдет, т.к. нужно заинсталлировать кастомную сборку primefaces (см. комментарии в pom.xml проекта homeless).
Запущенное приложение будет доступно по адресу http://localhost:8080/homeless

7.	Чтобы заработали отчеты, нужно сначала собрать приложение homeless-report-engine и задеплоить его в tomcat. В файле homeless\src\main\resources\application.properties проекта homeless необходимо поправить URL до приложения с движком отчетов (если оба приложения будут жить в одном томкате, то путь к нему будет http://localhost:8080/homeless-report-engine/ ) и затем пересобрать приложение homeless. После деплоймента последнего, будет работать вся функциональность.
Поскольку удобно разрабатывать в Intellij Idea, оба проекта открываются в разных окнах и сконфигурированы на разные порты.

8.	Чтобы добавить проект в Idea, достаточно выбрать импорт Maven проекта, убедиться что кастомный primefaces (из директории lib) уже заинсталлирован в локальный кэш и idea может его подцепить (см. комментарии в pom.xml). Проект собирается на версии maven 3.0, JDK 1.8.0_40 (возможно, перейдет на OpenJDK). После этого нужно добавить фичи на проект (JSF, PrimeFaces, Web Application etc) и создать конфигурацию запуска, указав war:exploded (в этом случае появится возможность видеть изменения в скриптах xhtml, css, javascript etc на лету). После изменения java кода достаточно будет сделать Redeploy.


Дополнительно

1.	Для тестов загрузите ChromeDriver - WebDriver for Chrome с https://sites.google.com/a/chromium.org/chromedriver/downloads в C:/tools/:
C:/tools/chromedriver.exe
Note: или подправьте homeless\src\test\java\ru\homeless\tests\Util.java
2.	В файле homeless\src\main\resources\application.properties
подправьте ссылки на рабочие директории
Аналогично  - homeless-report-engine\src\main\resources\application.properties
